name: verify_public_endpoints

on:
  push:
    branches: [ main ]
  workflow_dispatch: {}

jobs:
  verify:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: |
            ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Prime known_hosts
        env:
          VPS_HOST: ${{ secrets.VPS_HOST }}
          VPS_PORT: ${{ secrets.VPS_PORT }}
        run: |
          mkdir -p ~/.ssh
          if [ -n "$VPS_HOST" ]; then ssh-keyscan -p "$VPS_PORT" -H "$VPS_HOST" >> ~/.ssh/known_hosts 2>/dev/null || true; fi

      - name: Run HTTPS/API checks from VPS (avoids runner egress issues)
        env:
          ADMIN_EMAIL: ${{ secrets.ADMIN_EMAIL }}
          ADMIN_PASSWORD: ${{ secrets.ADMIN_PASSWORD }}
          VPS_HOST: ${{ secrets.VPS_HOST }}
          VPS_PORT: ${{ secrets.VPS_PORT }}
        run: |
          set -e
          HOST="${VPS_HOST:-}"
          PORT="${VPS_PORT:-22}"
          if [ -z "$HOST" ]; then echo "VPS_HOST not set" >&2; exit 1; fi
          ssh -p "$PORT" -o StrictHostKeyChecking=no root@"$HOST" "ADMIN_EMAIL='${ADMIN_EMAIL}' ADMIN_PASSWORD='${ADMIN_PASSWORD}' bash -s" <<'REMOTE'
          set -e
          : "${ADMIN_EMAIL:=admin@example.com}"
          : "${ADMIN_PASSWORD:=admin123}"
          head() { url="$1"; name="$2"; echo "=== $name HEAD ==="; ok=0; for i in $(seq 1 30); do code=$(curl -ksS -o /dev/null -w '%{http_code}' "$url" || true); if [ "$code" = "200" ] || [ "$code" = "301" ] || [ "$code" = "302" ] || [ "$code" = "307" ] || [ "$code" = "308" ]; then curl -ksS -I "$url" | sed -n '1,12p'; ok=1; break; fi; sleep 2; done; if [ "$ok" != "1" ]; then echo "(timeout) last=$code"; fi; echo; }
          head https://jeeey.com "jeeey.com"
          head https://admin.jeeey.com "admin.jeeey.com"
          head https://m.jeeey.com "m.jeeey.com"
          echo
          echo "=== m.jeeey.com HTML snippet ==="
          curl -ksS https://m.jeeey.com | sed -n '1,40p' | sed 's/<[^>]*>//g' | tr -s ' ' | head -n 5
          echo
          echo "=== api.jeeey.com /health ==="
          ok=0; for i in $(seq 1 30); do out=$(curl -ksS -i https://api.jeeey.com/health || true); code=$(printf "%s" "$out" | sed -n '1p' | awk '{print $2}' || true); if [ "$code" = "200" ]; then printf "%s\n" "$out" | sed -n '1,20p'; ok=1; break; fi; sleep 2; done; if [ "$ok" != "1" ]; then echo "(timeout) api health not 200"; fi
          echo
          echo "=== admin login (form) headers ==="
          curl -ksSI -X POST https://api.jeeey.com/api/admin/auth/login \
            -H 'content-type: application/x-www-form-urlencoded' \
            --data "email=${ADMIN_EMAIL}&password=${ADMIN_PASSWORD}" | sed -n '1,60p'
          echo
          echo "=== admin login (json) status ==="
          curl -ksS -o /dev/null -w '%{http_code}\n' -X POST https://api.jeeey.com/api/admin/auth/login \
            -H 'content-type: application/json' \
            --data "{\"email\":\"${ADMIN_EMAIL}\",\"password\":\"${ADMIN_PASSWORD}\",\"remember\":true}"
          REMOTE

