name: Deploy mweb

on:
  push:
    branches: [ main ]
    paths:
      - 'apps/mweb/**'
      - '.github/workflows/mweb-deploy.yml'
      - 'scripts/figma-*.mjs'
  workflow_dispatch: {}

concurrency:
  group: deploy-mweb
  cancel-in-progress: false

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 12
    env:
      DEPLOY_HOST: ${{ secrets.SSH_HOST || secrets.VPS_HOST || secrets.DEPLOY_HOST }}
      DEPLOY_USER: ${{ secrets.SSH_USER || secrets.VPS_USER || secrets.DEPLOY_USER }}
      DEPLOY_KEY: ${{ secrets.SSH_PRIVATE_KEY || secrets.VPS_SSH_KEY || secrets.DEPLOY_KEY }}
      DEPLOY_PORT: ${{ secrets.VPS_PORT || secrets.SSH_PORT || 22 }}
      MWEB_PATH: ${{ secrets.MWEB_DEPLOY_PATH || secrets.WEBROOT_MWEB || secrets.DEPLOY_PATH_MWEB || '/var/www/mweb' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 8.6.10

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Install deps (mweb only)
        run: pnpm --filter mweb install --no-frozen-lockfile

      - name: Build mweb
        run: pnpm --filter mweb build

      - name: Check required secrets
        run: |
          set -e
          for v in DEPLOY_HOST DEPLOY_USER DEPLOY_KEY MWEB_PATH; do
            if [ -z "${!v}" ]; then
              echo "Missing required secret: $v" >&2
              exit 1
            fi
          done

      - name: Setup SSH (agent)
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ env.DEPLOY_KEY }}

      - name: Create release dir on VPS (native ssh)
        run: |
          set -ex
          DEPLOY_PATH="${{ env.MWEB_PATH }}"
          ssh -vvv -o ConnectTimeout=10 -o ServerAliveInterval=10 -o ServerAliveCountMax=3 -o StrictHostKeyChecking=no -p "${{ env.DEPLOY_PORT }}" "${{ env.DEPLOY_USER }}@${{ env.DEPLOY_HOST }}" "set -ex; mkdir -p '$DEPLOY_PATH/releases/${GITHUB_SHA}'"

      - name: Upload build to VPS (rsync diff)
        run: |
          set -ex
          RSYNC_RSH="ssh -p '${{ env.DEPLOY_PORT }}' -o StrictHostKeyChecking=no -o ConnectTimeout=10 -o ServerAliveInterval=10 -o ServerAliveCountMax=3"
          rsync -az --delete --info=stats1,progress2 -e "$RSYNC_RSH" apps/mweb/dist/ "${{ env.DEPLOY_USER }}@${{ env.DEPLOY_HOST }}:${{ env.MWEB_PATH }}/releases/${GITHUB_SHA}/"

      - name: Activate release (native ssh)
        run: |
          set -ex
          DEPLOY_PATH="${{ env.MWEB_PATH }}"
          ssh -vvv -o ConnectTimeout=10 -o ServerAliveInterval=10 -o ServerAliveCountMax=3 -o StrictHostKeyChecking=no -p "${{ env.DEPLOY_PORT }}" "${{ env.DEPLOY_USER }}@${{ env.DEPLOY_HOST }}" "set -ex; ln -sfn '$DEPLOY_PATH/releases/${GITHUB_SHA}' '$DEPLOY_PATH/current'; ls -1dt '$DEPLOY_PATH'/releases/* | tail -n +6 | xargs -r rm -rf; (command -v sudo >/dev/null && sudo -n systemctl reload nginx) || true"

