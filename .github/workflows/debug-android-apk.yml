name: Build Android Debug APK (Standalone)

on:
  workflow_dispatch:
  push:
    branches:
      - 'cursor/**'

jobs:
  build_debug_apk:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: apps/mobile

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Install dependencies (workspace)
        run: pnpm install --no-frozen-lockfile
        working-directory: .

      - name: Set EXPO_PUBLIC_TRPC_URL (debug)
        run: |
          node -e "const fs=require('fs');const p='./app.json';const j=JSON.parse(fs.readFileSync(p,'utf8'));j.expo=j.expo||{};j.expo.extra=j.expo.extra||{};j.expo.extra.EXPO_PUBLIC_TRPC_URL=process.env.TRPC_URL || 'https://jeeeyai.onrender.com/trpc';fs.writeFileSync(p,JSON.stringify(j,null,2));console.log('Updated app.json ->',j.expo.extra.EXPO_PUBLIC_TRPC_URL);"

      - name: Setup Java 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Install Android SDK tools
        uses: android-actions/setup-android@v3

      - name: Accept Android SDK licenses
        run: yes | sdkmanager --licenses

      - name: Install required Android SDK packages
        run: |
          sdkmanager "platform-tools" "platforms;android-34" "build-tools;34.0.0"

      - name: Create placeholder assets (icon/splash)
        run: |
          mkdir -p assets
          B64="iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAQAAAC1HAwCAAAAC0lEQVR42mP8/x8AAwMCAO9n3aQAAAAASUVORK5CYII="
          echo $B64 | base64 -d > assets/icon.png
          echo $B64 | base64 -d > assets/adaptive-icon.png
          echo $B64 | base64 -d > assets/splash.png
          echo $B64 | base64 -d > assets/favicon.png

      - name: Expo prebuild (android)
        run: pnpm dlx expo prebuild --platform android --non-interactive --clean

      - name: Gradle assembleDebug
        run: |
          cd android
          chmod +x ./gradlew
          ./gradlew assembleDebug --no-daemon --stacktrace

      - name: Upload debug APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-debug-apk
          path: apps/mobile/android/app/build/outputs/apk/debug/*.apk
          if-no-files-found: error

