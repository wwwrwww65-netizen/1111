name: Build Android Debug APK (Standalone)

on:
  workflow_dispatch:

jobs:
  build_debug_apk:
    runs-on: ubuntu-latest
    env:
      CI: true
      REACT_NATIVE_DIR: ../node_modules/react-native
      REACT_NATIVE_NPM_PACKAGE: ../node_modules/@react-native/gradle-plugin
    defaults:
      run:
        working-directory: apps/mobile

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Install dependencies (workspace)
        run: pnpm install --no-frozen-lockfile --ignore-scripts
        working-directory: .

      - name: Set EXPO_PUBLIC_TRPC_URL (debug)
        run: |
          node -e "const fs=require('fs');const p='./app.json';const j=JSON.parse(fs.readFileSync(p,'utf8'));j.expo=j.expo||{};j.expo.extra=j.expo.extra||{};j.expo.extra.EXPO_PUBLIC_TRPC_URL=process.env.TRPC_URL || 'https://api.jeeey.com/trpc';fs.writeFileSync(p,JSON.stringify(j,null,2));console.log('Updated app.json ->',j.expo.extra.EXPO_PUBLIC_TRPC_URL);"

      - name: Setup Java 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Install Android SDK tools
        uses: android-actions/setup-android@v3

      - name: Accept Android SDK licenses
        run: yes | sdkmanager --licenses

      - name: Install required Android SDK packages
        run: |
          sdkmanager "platform-tools" "platforms;android-34" "build-tools;34.0.0"

      - name: Install ImageMagick and pngcheck
        run: |
          sudo apt-get update
          sudo apt-get install -y imagemagick pngcheck

      - name: Create placeholder assets (icon/splash)
        run: |
          mkdir -p assets
          convert -size 512x512 canvas:white assets/icon.png
          convert -size 512x512 canvas:white assets/adaptive-icon.png
          convert -size 1242x2436 canvas:white assets/splash.png
          convert -size 32x32 canvas:white assets/favicon.png
          pngcheck -v assets/*.png | cat

      - name: Inject android.package for prebuild
        run: |
          node -e "const fs=require('fs');const p='./app.json';const j=JSON.parse(fs.readFileSync(p,'utf8'));j.expo=j.expo||{};j.expo.android=j.expo.android||{};j.expo.android.package=j.expo.android.package||'com.example.ecom';fs.writeFileSync(p,JSON.stringify(j,null,2));console.log('android.package ->',j.expo.android.package);"

      - name: Expo prebuild (android)
        run: pnpm dlx expo prebuild --platform android --clean

      - name: Setup Gradle with cache
        uses: gradle/actions/setup-gradle@v4
        with:
          cache-read-only: false
          gradle-version: wrapper

      - name: Patch settings.gradle for RN gradle-plugin path
        run: |
          SETTINGS=android/settings.gradle
          if [ -f "$SETTINGS" ]; then
            cp "$SETTINGS" "$SETTINGS.bak"
            # Remove any existing includeBuild lines and append correct plugin include
            sed -i '/includeBuild/d' "$SETTINGS"
            echo 'includeBuild("../node_modules/@react-native/gradle-plugin")' >> "$SETTINGS"
            echo "Patched $SETTINGS:" && head -n 30 "$SETTINGS" | cat
          fi

      - name: Ensure gradle.properties has RN paths
        run: |
          GP=android/gradle.properties
          {
            echo "REACT_NATIVE_NPM_PACKAGE=../node_modules/@react-native/gradle-plugin"
            echo "reactNativeDir=../node_modules/react-native"
            echo "org.gradle.jvmargs=-Xmx4g -XX:MaxMetaspaceSize=1g -Dfile.encoding=UTF-8"
            echo "org.gradle.daemon=true"
            echo "org.gradle.parallel=true"
          } >> "$GP"
          echo "Wrote $GP:" && tail -n 20 "$GP" | cat

      - name: Gradle assembleDebug
        env:
          GRADLE_OPTS: "-Dorg.gradle.jvmargs='-Xmx4g -XX:MaxMetaspaceSize=1g -Dfile.encoding=UTF-8'"
        run: |
          cd android
          chmod +x ./gradlew
          for attempt in 1 2 3; do \
            ./gradlew -PREACT_NATIVE_NPM_PACKAGE=../node_modules/@react-native/gradle-plugin -PreactNativeDir=../node_modules/react-native assembleDebug --no-daemon --stacktrace && break || { \
              echo "Gradle attempt $attempt failed"; \
              if [ "$attempt" -lt 3 ]; then sleep $((attempt*15)); else exit 1; fi; \
            }; \
          done

      - name: Upload debug APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-debug-apk
          path: apps/mobile/android/app/build/outputs/apk/debug/*.apk
          if-no-files-found: error

