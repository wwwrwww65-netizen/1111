name: Verify and Manage VPS

on:
  push:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      restart_services:
        description: "Restart ecom services"
        required: false
        type: boolean
        default: false
      run_migrations:
        description: "Run Prisma migrate deploy"
        required: false
        type: boolean
        default: false

jobs:
  verify:
    runs-on: ubuntu-latest
    steps:
      - name: Prepare SSH
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |
          set -e
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
          ssh-keyscan -H srv995016.hstgr.cloud >> ~/.ssh/known_hosts 2>/dev/null || true

      - name: Verify services and health
        run: |
          ssh -i ~/.ssh/id_ed25519 -o StrictHostKeyChecking=no root@srv995016.hstgr.cloud "bash -lc 'set -e; for s in ecom-api ecom-admin ecom-web; do systemctl is-active --quiet \"$s\" && echo \"$s: active\" || (echo \"$s: not active\"; journalctl -u \"$s\" -n 120 --no-pager || true); done; curl -fsS http://127.0.0.1:4000/health || true; nginx -t && systemctl reload nginx || true'"

      - name: Run Prisma db push (non-destructive)
        if: inputs.run_migrations == true || github.event_name == 'push'
        run: |
          ssh -i ~/.ssh/id_ed25519 -o StrictHostKeyChecking=no root@srv995016.hstgr.cloud "bash -lc 'cd /var/www/ecom/packages/db && set -a; . /var/www/ecom/.env.api; set +a; npx -y prisma db push'"

      - name: Restart services
        if: inputs.restart_services == true || github.event_name == 'push'
        run: |
          ssh -i ~/.ssh/id_ed25519 -o StrictHostKeyChecking=no root@srv995016.hstgr.cloud "bash -lc 'set -e; systemctl restart ecom-api || true; systemctl restart ecom-admin || true; systemctl restart ecom-web || true; sleep 2; systemctl is-active --quiet ecom-api && echo ecom-api:active || (echo ecom-api:not active; journalctl -u ecom-api -n 120 --no-pager || true); systemctl is-active --quiet ecom-admin && echo ecom-admin:active || (echo ecom-admin:not active; journalctl -u ecom-admin -n 120 --no-pager || true); systemctl is-active --quiet ecom-web && echo ecom-web:active || (echo ecom-web:not active; journalctl -u ecom-web -n 120 --no-pager || true);'"

      - name: Collect service logs and health
        if: always()
        run: |
          set -e
          mkdir -p logs
          ssh -i ~/.ssh/id_ed25519 -o StrictHostKeyChecking=no root@srv995016.hstgr.cloud "journalctl -u ecom-api -n 300 --no-pager || true" | tee logs/ecom-api.log
          ssh -i ~/.ssh/id_ed25519 -o StrictHostKeyChecking=no root@srv995016.hstgr.cloud "journalctl -u ecom-admin -n 300 --no-pager || true" | tee logs/ecom-admin.log
          ssh -i ~/.ssh/id_ed25519 -o StrictHostKeyChecking=no root@srv995016.hstgr.cloud "journalctl -u ecom-web -n 300 --no-pager || true" | tee logs/ecom-web.log
          ssh -i ~/.ssh/id_ed25519 -o StrictHostKeyChecking=no root@srv995016.hstgr.cloud "nginx -t || true" | tee logs/nginx-test.txt
          ssh -i ~/.ssh/id_ed25519 -o StrictHostKeyChecking=no root@srv995016.hstgr.cloud "curl -fsS http://127.0.0.1:4000/health || true" | tee logs/api-health.txt

      - name: Upload logs artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: vps-logs
          path: logs/
          if-no-files-found: warn

