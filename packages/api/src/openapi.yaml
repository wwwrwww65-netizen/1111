openapi: 3.0.3
info:
  title: Admin API
  version: 0.1.0
servers:
  - url: http://localhost:4000
paths:
  /api/admin/health:
    get:
      summary: Health check for admin REST
      security:
        - bearerAuth: []
      responses:
        '200':
          description: OK
  /api/admin/inventory:
    get:
      summary: Inventory list (placeholder)
  /api/admin/inventory/list:
    get:
      summary: Inventory list (paged)
      parameters:
        - in: query
          name: page
          schema: { type: integer }
        - in: query
          name: limit
          schema: { type: integer }
      security:
        - bearerAuth: []
      responses:
        '200': { description: OK }
  /api/admin/inventory/adjust:
    post:
      summary: Adjust stock
      security:
        - bearerAuth: []
      responses:
        '200': { description: OK }
  /api/admin/inventory/export/csv:
    get:
      summary: Export inventory CSV
      security:
        - bearerAuth: []
      responses:
        '200': { description: OK }
  /api/admin/orders/ship:
    post:
      summary: Mark order as shipped
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                orderId: { type: string }
                trackingNumber: { type: string }
              required: [orderId]
      responses:
        '200': { description: OK }
  /api/admin/payments/refund:
    post:
      summary: Refund an order payment
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                orderId: { type: string }
                amount: { type: number }
              required: [orderId]
      responses:
        '200': { description: OK }
  /api/admin/orders/list:
    get:
      summary: List orders
      parameters:
        - in: query
          name: page
          schema: { type: integer }
        - in: query
          name: limit
          schema: { type: integer }
        - in: query
          name: status
          schema: { type: string }
        - in: query
          name: search
          schema: { type: string }
      security:
        - bearerAuth: []
      responses:
        '200': { description: OK }
  /api/admin/payments/list:
  /api/admin/users/list:
    get:
      summary: List users
      parameters:
        - in: query
          name: page
          schema: { type: integer }
        - in: query
          name: limit
          schema: { type: integer }
        - in: query
          name: search
          schema: { type: string }
      security:
        - bearerAuth: []
      responses:
        '200': { description: OK }
  /api/admin/users/assign-role:
    post:
      summary: Assign role to user
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userId: { type: string }
                roleName: { type: string }
              required: [userId, roleName]
      responses:
        '200': { description: OK }
  /api/admin/coupons/list:
    get:
      summary: List coupons
      parameters:
        - in: query
          name: page
          schema: { type: integer }
        - in: query
          name: limit
          schema: { type: integer }
      security:
        - bearerAuth: []
      responses:
        '200': { description: OK }
  /api/admin/coupons:
    post:
      summary: Create coupon
      security:
        - bearerAuth: []
      responses:
        '200': { description: OK }
  /api/admin/analytics:
    get:
      summary: Analytics KPIs
      security:
        - bearerAuth: []
      responses:
        '200': { description: OK }
  /api/admin/media/list:
    get:
      summary: List media assets
      security:
        - bearerAuth: []
      responses:
        '200': { description: OK }
  /api/admin/media:
    post:
      summary: Create media asset (url or base64)
      security:
        - bearerAuth: []
      responses:
        '200': { description: OK }
  /api/admin/2fa/enable:
    post:
      summary: Generate 2FA secret (TOTP)
      security:
        - bearerAuth: []
      responses:
        '200': { description: OK }
  /api/admin/2fa/verify:
    post:
      summary: Verify 2FA code and enable
      security:
        - bearerAuth: []
      responses:
        '200': { description: OK }
  /api/admin/2fa/disable:
    post:
      summary: Disable 2FA for current admin
      security:
        - bearerAuth: []
      responses:
        '200': { description: OK }
  /api/admin/tickets:
    get:
      summary: List support tickets
      security:
        - bearerAuth: []
      responses:
        '200': { description: OK }
    post:
      summary: Create support ticket
      security:
        - bearerAuth: []
      responses:
        '200': { description: OK }
  /api/admin/returns/list:
    get:
      summary: List return requests
      security:
        - bearerAuth: []
      responses:
        '200': { description: OK }
  /api/admin/loyalty/list:
    get:
      summary: List loyalty points
      security:
        - bearerAuth: []
      responses:
        '200': { description: OK }
  /api/admin/cms/pages:
    get:
      summary: List CMS pages
      security:
        - bearerAuth: []
      responses:
        '200': { description: OK }
    post:
      summary: Upsert CMS page
      security:
        - bearerAuth: []
      responses:
        '200': { description: OK }
  /api/admin/vendors/list:
    get:
      summary: List vendors
      security:
        - bearerAuth: []
      responses:
        '200': { description: OK }
  /api/admin/vendors:
    post:
      summary: Upsert vendor
      security:
        - bearerAuth: []
      responses:
        '200': { description: OK }
  /api/admin/integrations/list:
    get:
      summary: List integrations
      security:
        - bearerAuth: []
      responses:
        '200': { description: OK }
  /api/admin/integrations:
    post:
      summary: Create integration
      security:
        - bearerAuth: []
      responses:
        '200': { description: OK }
  /api/admin/settings/list:
    get:
      summary: List settings
      security:
        - bearerAuth: []
      responses:
        '200': { description: OK }
  /api/admin/backups/list:
    get:
      summary: List backups (applies 30-day retention cleanup)
      tags: [Backups]
      responses:
        '200':
          description: Backups list
  /api/admin/backups/run:
    post:
      summary: Run a new backup (enforces 30-day retention before listing)
      tags: [Backups]
      responses:
        '200':
          description: Backup created
  /api/admin/backups/{id}/restore:
    post:
      summary: Restore a backup (test restore creates demo data and marks job)
      tags: [Backups]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Restored
  /api/admin/backups/schedule:
    post:
      summary: Set backup schedule (daily/off)
      tags: [Backups]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                schedule:
                  type: string
                  enum: [daily, off]
      responses:
        '200':
          description: Schedule updated
  /api/admin/backups/list:
    get:
      summary: List backup jobs
      security:
        - bearerAuth: []
      responses:
        '200': { description: OK }
  /api/admin/backups/run:
    post:
      summary: Run backup
      security:
        - bearerAuth: []
      responses:
        '200': { description: OK }
    get:
      summary: List payments
      parameters:
        - in: query
          name: page
          schema: { type: integer }
        - in: query
          name: limit
          schema: { type: integer }
      security:
        - bearerAuth: []
      responses:
        '200': { description: OK }
  /api/admin/users/list:
    get:
      summary: List users
      parameters:
        - in: query
          name: page
          schema: { type: integer }
        - in: query
          name: limit
          schema: { type: integer }
        - in: query
          name: search
          schema: { type: string }
      security:
        - bearerAuth: []
      responses:
        '200': { description: OK }
  /api/admin/coupons/list:
    get:
      summary: List coupons
      parameters:
        - in: query
          name: page
          schema: { type: integer }
        - in: query
          name: limit
          schema: { type: integer }
      security:
        - bearerAuth: []
      responses:
        '200': { description: OK }
  /api/admin/settings:
    post:
      summary: Upsert a setting key/value
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                key: { type: string }
                value: { type: object }
              required: [key, value]
      responses:
        '200': { description: OK }
      security:
        - bearerAuth: []
      responses:
        '200': { description: OK }
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    BackupJob:
      type: object
      properties:
        id:
          type: string
        status:
          type: string
          enum: [PENDING, COMPLETED, RESTORING, RESTORED]
        location:
          type: string
          nullable: true
        sizeBytes:
          type: integer
          nullable: true
        createdAt:
          type: string
          format: date-time
