openapi: 3.0.3
info:
  title: Admin API
  version: 0.1.0
servers:
  - url: http://localhost:4000
paths:
  /api/admin/health:
    get:
      summary: Health check for admin REST
      security:
        - bearerAuth: []
      responses:
        '200':
          description: OK
  /api/admin/inventory:
    get:
      summary: Inventory list (placeholder)
  /api/admin/inventory/list:
    get:
      summary: Inventory list (paged)
      parameters:
        - in: query
          name: page
          schema: { type: integer }
        - in: query
          name: limit
          schema: { type: integer }
      security:
        - bearerAuth: []
      responses:
        '200': { description: OK }
  /api/admin/inventory/adjust:
    post:
      summary: Adjust stock
      security:
        - bearerAuth: []
      responses:
        '200': { description: OK }
  /api/admin/inventory/export/csv:
    get:
      summary: Export inventory CSV
      security:
        - bearerAuth: []
      responses:
        '200': { description: OK }
  /api/admin/orders/ship:
    post:
      summary: Mark order as shipped
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                orderId: { type: string }
                trackingNumber: { type: string }
              required: [orderId]
      responses:
        '200': { description: OK }
  /api/admin/payments/refund:
    post:
      summary: Refund an order payment
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                orderId: { type: string }
                amount: { type: number }
              required: [orderId]
      responses:
        '200': { description: OK }
  /api/admin/orders/list:
    get:
      summary: List orders
      parameters:
        - in: query
          name: page
          schema: { type: integer }
        - in: query
          name: limit
          schema: { type: integer }
        - in: query
          name: status
          schema: { type: string }
        - in: query
          name: search
          schema: { type: string }
      security:
        - bearerAuth: []
      responses:
        '200': { description: OK }
  /api/admin/payments/list:
    get:
      summary: List payments
      parameters:
        - in: query
          name: page
          schema: { type: integer }
        - in: query
          name: limit
          schema: { type: integer }
      security:
        - bearerAuth: []
      responses:
        '200': { description: OK }
  /api/admin/users/list:
    get:
      summary: List users
      parameters:
        - in: query
          name: page
          schema: { type: integer }
        - in: query
          name: limit
          schema: { type: integer }
        - in: query
          name: search
          schema: { type: string }
      security:
        - bearerAuth: []
      responses:
        '200': { description: OK }
  /api/admin/coupons/list:
    get:
      summary: List coupons
      parameters:
        - in: query
          name: page
          schema: { type: integer }
        - in: query
          name: limit
          schema: { type: integer }
      security:
        - bearerAuth: []
      responses:
        '200': { description: OK }
  /api/admin/settings:
    post:
      summary: Upsert a setting key/value
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                key: { type: string }
                value: { type: object }
              required: [key, value]
      responses:
        '200': { description: OK }
      security:
        - bearerAuth: []
      responses:
        '200': { description: OK }
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
