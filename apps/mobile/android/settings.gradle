pluginManagement {
  repositories {
    gradlePluginPortal()
    google()
    mavenCentral()
  }

  // Resolve RN settings plugin from published module to avoid composite build issues
  resolutionStrategy {
    eachPlugin { requested ->
      if (requested.id.id == "com.facebook.react.settings" || requested.id.id == "com.facebook.react") {
        useModule("com.facebook.react:react-native-gradle-plugin:0.74.4")
      }
    }
  }

  // Keep Expo autolinking plugin via included build for monorepo/node_modules
  def includeIfExists = { File dir -> if (dir != null && dir.exists()) { includeBuild(dir.absolutePath) } }
  def expoCandidates = [
    new File(rootDir, "../node_modules/expo-modules-autolinking/android/expo-gradle-plugin"),
    new File(rootDir, "../../node_modules/expo-modules-autolinking/android/expo-gradle-plugin"),
    new File(rootDir, "../../../node_modules/expo-modules-autolinking/android/expo-gradle-plugin"),
  ]
  expoCandidates.each { includeIfExists(it) }
}

plugins {
  id("com.facebook.react.settings") version "0.74.4"
  id("expo-autolinking-settings")
}

extensions.configure(com.facebook.react.ReactSettingsExtension) { ex ->
  if (System.getenv('EXPO_USE_COMMUNITY_AUTOLINKING') == '1') {
    ex.autolinkLibrariesFromCommand()
  } else {
    ex.autolinkLibrariesFromCommand(expoAutolinking.rnConfigCommand)
  }
}
expoAutolinking.useExpoModules()

rootProject.name = 'E-commerce Mobile App'

expoAutolinking.useExpoVersionCatalog()

include ':app'
